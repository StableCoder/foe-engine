// Copyright (C) 2022 George Cave.
//
// SPDX-License-Identifier: Apache-2.0
//
// This file is automatically generated from the XML Spec files.
// Re-generate via the script directly (tools/generate_result_code.sh)
// or the 'make autogenerate_code_foe_graphics_resource_yaml' target.

#include <catch.hpp>

#include <foe/graphics/resource/yaml/result.h>

#define ERROR_CODE_CATCH_CHECK(X)                                                                  \
    SECTION(#X) {                                                                                  \
        foeGraphicsResourceYamlResultToString(X, resultString);                                    \
        CHECK(std::string_view{resultString} == #X);                                               \
    }

TEST_CASE("foeGraphicsResourceYamlResult - Ensure error codes return correct values and strings") {
    char resultString[FOE_MAX_RESULT_STRING_SIZE];

    SECTION("Generic non-existant negative value") {
        foeGraphicsResourceYamlResultToString((foeGraphicsResourceYamlResult)FOE_RESULT_MIN_ENUM,
                                              resultString);
        CHECK(std::string_view{resultString} ==
              "FOE_GRAPHICS_RESOURCE_YAML_UNKNOWN_ERROR_2147483647");
    }
    SECTION("Generic non-existant positive value") {
        foeGraphicsResourceYamlResultToString((foeGraphicsResourceYamlResult)FOE_RESULT_MAX_ENUM,
                                              resultString);
        CHECK(std::string_view{resultString} ==
              "FOE_GRAPHICS_RESOURCE_YAML_UNKNOWN_SUCCESS_2147483647");
    }

    ERROR_CODE_CATCH_CHECK(FOE_GRAPHICS_RESOURCE_YAML_SUCCESS)
    ERROR_CODE_CATCH_CHECK(FOE_GRAPHICS_RESOURCE_YAML_ERROR_FAILED_TO_REGISTER_RESOURCE_EXPORTER)
    ERROR_CODE_CATCH_CHECK(FOE_GRAPHICS_RESOURCE_YAML_ERROR_IMAGE_POOL_NOT_FOUND)
    ERROR_CODE_CATCH_CHECK(FOE_GRAPHICS_RESOURCE_YAML_ERROR_IMAGE_RESOURCE_ALREADY_EXISTS)
    ERROR_CODE_CATCH_CHECK(FOE_GRAPHICS_RESOURCE_YAML_ERROR_FAILED_TO_REGISTER_IMAGE_IMPORTER)
    ERROR_CODE_CATCH_CHECK(FOE_GRAPHICS_RESOURCE_YAML_ERROR_MATERIAL_POOL_NOT_FOUND)
    ERROR_CODE_CATCH_CHECK(FOE_GRAPHICS_RESOURCE_YAML_ERROR_MATERIAL_RESOURCE_ALREADY_EXISTS)
    ERROR_CODE_CATCH_CHECK(FOE_GRAPHICS_RESOURCE_YAML_ERROR_FAILED_TO_REGISTER_MATERIAL_IMPORTER)
    ERROR_CODE_CATCH_CHECK(FOE_GRAPHICS_RESOURCE_YAML_ERROR_MESH_POOL_NOT_FOUND)
    ERROR_CODE_CATCH_CHECK(FOE_GRAPHICS_RESOURCE_YAML_ERROR_MESH_RESOURCE_ALREADY_EXISTS)
    ERROR_CODE_CATCH_CHECK(FOE_GRAPHICS_RESOURCE_YAML_ERROR_FAILED_TO_REGISTER_MESH_IMPORTER)
    ERROR_CODE_CATCH_CHECK(FOE_GRAPHICS_RESOURCE_YAML_ERROR_VERTEX_DESCRIPTOR_POOL_NOT_FOUND)
    ERROR_CODE_CATCH_CHECK(
        FOE_GRAPHICS_RESOURCE_YAML_ERROR_VERTEX_DESCRIPTOR_RESOURCE_ALREADY_EXISTS)
    ERROR_CODE_CATCH_CHECK(
        FOE_GRAPHICS_RESOURCE_YAML_ERROR_FAILED_TO_REGISTER_VERTEX_DESCRIPTOR_IMPORTER)
    ERROR_CODE_CATCH_CHECK(FOE_GRAPHICS_RESOURCE_YAML_ERROR_SHADER_POOL_NOT_FOUND)
    ERROR_CODE_CATCH_CHECK(FOE_GRAPHICS_RESOURCE_YAML_ERROR_SHADER_RESOURCE_ALREADY_EXISTS)
    ERROR_CODE_CATCH_CHECK(FOE_GRAPHICS_RESOURCE_YAML_ERROR_FAILED_TO_REGISTER_SHADER_IMPORTER)
}
